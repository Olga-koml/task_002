name: Run Tests

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Build project using make
      run: |
        chmod +x ./make.sh
        ./make.sh

    - name: Install dependencies
      run: |
        pip install -r tests/requirements.txt

    - name: Run Pytest
      run: |
        pytest --color=yes -v --tb=short --html=pytest_report.html tests

    - name: Upload test results
      uses: actions/upload-artifact@v2
      with:
        name: pytest-results
        path: pytest_report.html

    # - name: Install clang-format
    #   run: sudo apt-get install -y clang-format

    # - name: Check clang-format
    #   run: |
    #     for file in $(git ls-files 'src/*.c' 'src/*.h'); do
    #       clang-format -n -style=$(pwd)/clang/.clang-format $file
    #     done
  clang-format-check:
    runs-on: ubuntu-latest

    paths:
      - 'src/**.c'
      - 'src/**.h'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install clang-format
      run: sudo apt-get install clang-format

    - name: Check code formatting
      run: |
        CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -E '\.(c|h)$')
        if [ -n "$CHANGED_FILES" ]; then
          for FILE in $CHANGED_FILES; do
            clang-format -style=file -output-replacements-xml $FILE | grep -q "<replacement " && echo "Error: Code formatting issues in $FILE" && exit 1
          done
        else
          echo "No C or H files changed."
        fi