name: Run Tests

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Build project using make
      run: |
        chmod +x ./make.sh
        ./make.sh

    - name: Install dependencies
      run: |
        pip install -r tests/requirements.txt

    - name: Run Pytest
      run: |
        pytest --color=yes -v --tb=short --html=pytest_report.html tests

    - name: Upload test results
      uses: actions/upload-artifact@v2
      with:
        name: pytest-results
        path: pytest_report.html

    # - name: Install clang-format
    #   run: sudo apt-get install -y clang-format

    # - name: Check clang-format
    #   run: |
    #     for file in $(git ls-files 'src/*.c' 'src/*.h'); do
    #       clang-format -n -style=$(pwd)/clang/.clang-format $file
    #     done
  style-check:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up clang-format
      run: |
        sudo apt-get install -y clang-format

    - name: Check code style with clang-format
      id: clang-format-check
      run: |
        cp clang/.clang-format src/
        mapfile -t files_to_check < <(find src -name '*.c' -o -name '*.h')
        for file in "${files_to_check[@]}"; do
          if ! clang-format -n "$file" | grep -q "warning"; then
            echo "File $file is clang-formatted correctly."
          else
            echo "File $file has clang-format warnings."
          fi
        done

    - name: Set clang-format warnings output
      id: set-clang-format-warnings
      run: echo "CLANG_FORMAT_WARNINGS=${{ steps.clang-format-check.outputs.warnings }}" >> $GITHUB_ENV

    - name: Display clang-format warnings
      run: echo "Clang-format warnings: ${{ steps.set-clang-format-warnings.outputs.CLANG_FORMAT_WARNINGS }}"

    - name: Fail if clang-format warnings found
      run: |
        if [[ "${{ steps.set-clang-format-warnings.outputs.CLANG_FORMAT_WARNINGS }}" == "true" ]]; then
          echo "Clang-format warnings found. Exiting with code 1."
          exit 1
        else
          echo "No clang-format warnings found."
        fi
